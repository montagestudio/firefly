# this config needs haproxy-1.1.28 or haproxy-1.2.1

global
	log 127.0.0.1	local0
	log 127.0.0.1	local1 notice
	#log loghost	local0 info
	maxconn 4096
	#chroot /usr/share/haproxy
	user haproxy
	group haproxy
	daemon
	#debug
	#quiet

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	retries	3
	option redispatch
	option http-keep-alive
	maxconn	2000
	contimeout	5000
	clitimeout	50000
	srvtimeout	50000

	errorfile	400	/etc/haproxy/errors/400.http
	errorfile	403	/etc/haproxy/errors/403.http
	errorfile	408	/etc/haproxy/errors/408.http
	errorfile	500	/etc/haproxy/errors/500.http
	errorfile	502	/etc/haproxy/errors/502.http
	errorfile	503	/etc/haproxy/errors/503.http
	errorfile	504	/etc/haproxy/errors/504.http

frontend http-in
	bind *:80
	reqirep ^Host:\ ([^\.]+)\.local-project\..*\.xip\.io:2440   Host:\ \1.local-project.montagestudio.com:2440
	reqadd X-Forwarded-Proto:\ http
	option forwardfor
	acl static path_beg /app
	acl static path_beg /assets
	acl static path /favicon.ico
	acl project path_beg /api
	acl project path_beg /build
	acl project hdr_end(Host) project.montagestudio.net
	acl project hdr_end(Host) staging-project.montagestudio.net
	acl project hdr_end(Host) local-project.montagestudio.com:2440
	acl is_websocket hdr(Upgrade) -i WebSocket
	acl is_websocket hdr_beg(Host) -i ws
	acl monitoring path /admin
	# `use_backend project` needs to go first because there might be urls like
	# /assets that should be handled by the project server instead of the
	# static server
	use_backend project if project or is_websocket
	use_backend static if static
	use_backend private_monitoring if monitoring
	default_backend login

frontend https-in
	bind *:443 ssl crt /etc/ssl/montagestudio.com.pem crt /etc/ssl/project.montagestudio.net.pem
	reqadd X-Forwarded-Proto:\ https
	option forwardfor
	acl static path_beg /app
	acl static path_beg /assets
	acl static path /favicon.ico
	acl project path_beg /api
	acl project path_beg /build
	acl project hdr_end(Host) project.montagestudio.net
	acl project hdr_end(Host) staging-project.montagestudio.net
	acl project hdr_end(Host) local-project.montagestudio.com:2440
	acl is_websocket hdr(Upgrade) -i WebSocket
	acl is_websocket hdr_beg(Host) -i ws
	acl monitoring path /admin
	# `use_backend project` needs to go first because there might be urls like
	# /assets that should be handled by the project server instead of the
	# static server
	use_backend project if project or is_websocket
	use_backend static if static
	use_backend private_monitoring if monitoring
	default_backend login


#
# Login servers
#
backend login
	redirect scheme https if !{ ssl_fc }
	balance roundrobin
	option httpchk
	cookie login insert preserve nocache
	server login1 107.170.4.128:2440 cookie L1 maxconn 1000 check inter 2000 rise 2 fall 5
	server login2 107.170.4.142:2440 cookie L2 maxconn 1000 check inter 2000 rise 2 fall 5

#
# Web servers for filament
#
backend static
	redirect scheme https if !{ ssl_fc }
	balance roundrobin
	option prefer-last-server
	# Replace requests to /favicon.ico with /app/assets/img/favicon.ico
	reqirep ^([A-Z]*)\ /favicon.ico\ (.*)$		\1\ /app/assets/img/favicon.ico\ \2
	# Replace requests to /assets with /app/assets
	reqirep ^([A-Z]*)\ (/assets[^\ ]*)\ (.*)$		\1\ /app\2\ \3
	server static1 162.243.35.210:80 maxconn 1000
	# server static2 192.168.2.2:80 maxconn 1000


#
# Project servers
#
backend project
#	redirect scheme https if !{ ssl_fc }
	balance roundrobin
	timeout server 120000
	option httpchk
	use-server project1 if { hdr_beg(Host) 1- }
	use-server project2 if { hdr_beg(Host) 2- }
	use-server project3 if { hdr_beg(Host) 3- }
	use-server project4 if { hdr_beg(Host) 4- }
	cookie project insert preserve nocache
	server project1 162.243.121.4:2440    cookie P1 maxconn 1000 check inter 2000 rise 2 fall 5
	server project2 162.243.243.106:2440  cookie P2 maxconn 1000 check inter 2000 rise 2 fall 5
	server project3 192.241.174.110:2440  cookie P3 maxconn 1000 check inter 2000 rise 2 fall 5
	server project4 192.241.252.81:2440   cookie P4 maxconn 1000 check inter 2000 rise 2 fall 5

# statistics admin level depends on the authenticated user
userlist stats-auth
	# Admin group for the stats
	group admin			 users administrator
	user  administrator	 insecure-password Mont@ge1789
	# Read Only group for stats
	group readonly		  users montage
	user  montage		   insecure-password Mont@ge1789

# internal monitoring access (unlimited)
backend private_monitoring
	acl AUTH	   http_auth(stats-auth)
	acl AUTH_ADMIN http_auth_group(stats-auth) admin
	stats enable
	stats uri   /admin?stats
	stats refresh 5s
	stats show-legends
	stats http-request auth unless AUTH
	stats admin if AUTH_ADMIN
	stats scope http-in
	stats scope https-in
	stats scope login
	stats scope static
	stats scope project
	stats show-desc Montage Studio Statistic Page
