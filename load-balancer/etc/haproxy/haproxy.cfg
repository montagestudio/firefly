# this config needs haproxy-1.1.28 or haproxy-1.2.1

global
	log 127.0.0.1:514	local0
	#log 127.0.0.1	local1 notice
	#log loghost	local0 info
	maxconn 4096
	#chroot /usr/share/haproxy
	user haproxy
	group haproxy
	daemon
	#debug
	#quiet
	tune.ssl.default-dh-param 2048
	ssl-default-bind-options   no-sslv3 no-tls-tickets
	ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

defaults
	mode	http
	log     global
	option	httplog
	option  logasap
	option	dontlognull
	retries	3
	option redispatch
	option http-keep-alive
	maxconn	2000
	timeout connect	5000
	timeout client	50000
	timeout server	50000

	errorfile	400	/etc/haproxy/errors/400.http
	errorfile	403	/etc/haproxy/errors/403.http
	errorfile	408	/etc/haproxy/errors/408.http
	errorfile	500	/etc/haproxy/errors/500.http
	errorfile	502	/etc/haproxy/errors/502.http
	errorfile	503	/etc/haproxy/errors/503.http
	errorfile	504	/etc/haproxy/errors/504.http

frontend http-in
	bind *:80
	reqirep ^Host:\ ([^\.]+)\.project.local\..*\.xip\.io:2440   Host:\ \1.project.local.montage.studio:2440
	reqadd X-Forwarded-Proto:\ http
	option forwardfor
	acl static path_beg /app
	acl static path_beg /assets
	acl static path /favicon.ico
	acl project hdr_beg(Host) api
	acl project hdr_beg(Host) build
	acl project hdr_beg(Host) project
	acl project hdr_beg(Host) session
	# the -i flag should make haproxy treat Upgrade as case-insensitive, but
	# that seems to have been broken in 1.5-dev24. The examples in the spec
	# and all the browsers seem to send Upgrade: websocket, so "websocket"
	# should remain lowercase
	acl is_websocket hdr(Upgrade) -i websocket
	acl is_websocket hdr_beg(Host) -i ws
	acl monitoring path /admin
	acl rottentomatoes hdr_sub(Host) rottentomatoes
	use_backend rottentomatoes if rottentomatoes
	# `use_backend project-daemon` needs to go first because there might be urls like
	# /assets that should be handled by the project-daemon server instead of the
	# static server
	use_backend project-daemon if project or is_websocket
	use_backend static if static
	use_backend private_monitoring if monitoring
	default_backend login

frontend https-in
	bind *:443 ssl crt /etc/ssl/montage.studio.pem
	reqadd X-Forwarded-Proto:\ https
	option forwardfor
	acl static path_beg /app
	acl static path_beg /assets
	acl static path /favicon.ico
	acl project hdr_beg(Host) api
	acl project hdr_beg(Host) build
	acl project hdr_beg(Host) project
	acl project hdr_beg(Host) session
	acl is_websocket hdr(Upgrade) -i WebSocket
	acl is_websocket hdr_beg(Host) -i ws
	acl monitoring path /admin
	acl rottentomatoes hdr_sub(Host) rottentomatoes
	use_backend rottentomatoes if rottentomatoes
	# `use_backend project-daemon` needs to go first because there might be urls like
	# /assets that should be handled by the project-daemon server instead of the
	# static server
	use_backend project-daemon if project or is_websocket
	use_backend static if static
	use_backend private_monitoring if monitoring
	default_backend login


#
# Login servers
#
backend login
	redirect scheme https if !{ ssl_fc }
	balance roundrobin
	option httpchk
	cookie login insert preserve nocache
	server login login:2440 cookie L1 maxconn 1000 check inter 2000 rise 2 fall 5

#
# Web servers for filament
#
backend static
	# Replace requests to /favicon.ico with /app/assets/img/favicon.ico
	reqirep ^([A-Z]*)\ /favicon.ico\ (.*)$		\1\ /app/assets/img/favicon.ico\ \2
	# Replace requests to /assets with /app/assets
	reqirep ^([A-Z]*)\ (/assets[^\ ]*)\ (.*)$		\1\ /app\2\ \3
	# Redirect to https
	redirect scheme https if !{ ssl_fc }
	balance roundrobin
	option prefer-last-server
	server static static:80 maxconn 1000

#
# Proxy for individual project containers
#
backend project-daemon
	# Some mobile borwser help by adding a www in front get rid of it.
	reqirep ^Host:\ www.([0-9])-(.*)   Host:\ \1-\2
	balance roundrobin
	timeout server 120000
	option httpchk
	cookie project-daemon insert preserve nocache
	server project1 project-daemon:2440    cookie P1 maxconn 1000 check inter 2000 rise 2 fall 5

# statistics admin level depends on the authenticated user
userlist stats-auth
	# Admin group for the stats
	group admin			 users administrator
	user  administrator	 insecure-password Mont@ge1789
	# Read Only group for stats
	group readonly		  users montage
	user  montage		  insecure-password Mont@ge1789

# internal monitoring access (unlimited)
backend private_monitoring
	acl AUTH	   http_auth(stats-auth)
	acl AUTH_ADMIN http_auth_group(stats-auth) admin
	stats enable
	stats uri   /admin?stats
	stats refresh 5s
	stats show-legends
	stats http-request auth unless AUTH
	stats admin if AUTH_ADMIN
	stats scope http-in
	stats scope https-in
	stats scope login
	stats scope static
	stats scope project-daemon
	stats show-desc Montage Studio Statistic Page


backend rottentomatoes
    reqirep ^Host:\ rottentomatoes.montagestudio.com   Host:\ api.rottentomatoes.com
    server rottentomatoes 107.20.142.74:80 no-sslv3
