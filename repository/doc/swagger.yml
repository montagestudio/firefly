swagger: "2.0"
info:
  description: "Service for repository operations on user workspaces."
  version: "1.0.0"
  title: "Repository API"
schemes:
- "https"
paths:
  /repositories:
    post:
      summary: "Clone or create a repository"
      description: ""
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters: 
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - owner
          - repo
          properties:
            owner:
              type: string
            repo:
              type: string
      responses:
        200:
          description: "Repo already exists"
        201:
          description: "Repo was cloned or created"
        400:
          description: "Invalid parameters were given or cloning the repository failed"
        401:
          description: "User is not signed in or does not have access to the repository"
  /repositories/{owner}/{repo}/branches:
    get:
      summary: "List the branches in the repository"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      responses:
        200:
          description: "Success"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository not found"
  /repositories/{owner}/{repo}/commit:
    post:
      summary: "Commit all files in the repository"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
            - message
          properties:
            fileUrls:
              type: array
              items:
                type: string
            message:
              type: string
            remove:
              type: boolean
            amend:
              type: boolean
      responses:
        200:
          description: "Files committed"
        400:
          description: "Invalid parameters"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository not found"
  /repositories/{owner}/{repo}/commitBatch:
    post:
      summary: "Opens a new commit batch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
            - message
          properties:
            message:
              type: string
      responses:
        200:
          description: "Commit batch opened"
        400:
          description: "Invalid message"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository not found"
  /repositories/{owner}/{repo}/push:
    post:
      summary: "Push (and possibly rebase) local commits in the repository"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
            - branch
          properties:
            branch:
              type: string
      responses:
        200:
          description: "Push complete"
        400:
          description: "Push failed"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository or branch not found"
  /repositories/{owner}/{repo}/shadowBranch/{branch}:
    get:
      summary: "Get the status of a shadow branch in the repository"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      - name: branch
        in: path
        required: true
        type: string
      - name: forceFetch
        in: query
        type: boolean
      responses:
        200:
          description: "Checkout successful"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository or branch not found"
  /repositories/{owner}/{repo}/shadowBranch/{branch}/merge:
    post:
      summary: "Merge a shadow branch into the default branch"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      - name: branch
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            squash:
              type: boolean
            resolutionStrategy:
              type: string
      responses:
        200:
          description: "Checkout successful"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository or branch not found"
  /repositories/{owner}/{repo}/shadowBranch:
    post:
      summary: "Checkout a shadow branch in the repository"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            branch:
              type: string
      responses:
        200:
          description: "Checkout successful"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository or branch not found"
  /repositories/{owner}/{repo}/refs:
    put:
      summary: "Update refs in the repository"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: owner
        in: path
        required: true
        type: string
      - name: repo
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            resolutionStrategy:
              type: string
            reference:
              type: object
            forceFetch:
              type: boolean
      responses:
        200:
          description: "Checkout successful"
        401:
          description: "User is not signed in"
        404:
          description: "Specified repository or branch not found"