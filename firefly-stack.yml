version: "3.3"

services:
  static:
    image: registry.montage.studio/firefly/static:0.2.0
    build:
      context: .
      dockerfile: static/Dockerfile
    networks:
      - traefik_net
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.docker.network=traefik_net"
        - "traefik.frontend.rule=Host:${FIREFLY_HOSTNAME}"
  login:
    image: registry.montage.studio/firefly/login:0.2.0
    build:
      context: .
      dockerfile: login/Dockerfile
    networks:
      - traefik_net
    environment:
      - NODE_ENV
      - FIREFLY_PORT
      - FIREFLY_APP_URL
      - FIREFLY_PROJECT_URL
      - GITHUB_CLIENT_ID
      - GITHUB_CLIENT_SECRET
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.port=2440"
        - "traefik.docker.network=traefik_net"
        - "traefik.frontend.rule=Host:auth.${FIREFLY_HOSTNAME}"
  project-daemon:
    image: registry.montage.studio/firefly/project-daemon:0.2.2
    build:
      context: .
      dockerfile: project-daemon/Dockerfile
    networks:
      - traefik_net
      - projects
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV
      - PROJECT_ROOT
      - FIREFLY_PORT
      - FIREFLY_APP_URL
      - FIREFLY_PROJECT_URL
    deploy:
      placement:
        constraints: [node.role == manager]
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.port=2440"
        - "traefik.docker.network=traefik_net"
        - "traefik.frontend.rule=Host:project.${FIREFLY_HOSTNAME},api.${FIREFLY_HOSTNAME},build.${FIREFLY_HOSTNAME},ws.${FIREFLY_HOSTNAME}"

networks:
  traefik_net:
    external: true
  projects:
    driver: overlay
