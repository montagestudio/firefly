version: "3.3"

services:
  traefik:
    image: traefik:latest
    command: --docker.domain=${FIREFLY_HOSTNAME}
    networks:
      - net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: traefik-config
        target: /traefik.toml
    deploy:
      placement:
        constraints:
          - node.role == manager
  static:
    image: registry.montage.studio/firefly/static:0.1.0
    build:
      context: .
      dockerfile: static/Dockerfile
    networks:
      - net
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.docker.network=firefly_net"
        - "traefik.frontend.rule=Host:${FIREFLY_HOSTNAME}"
  login:
    image: registry.montage.studio/firefly/login:0.2.0
    build:
      context: .
      dockerfile: login/Dockerfile
    networks:
      - net
    environment:
      - NODE_ENV
      - FIREFLY_PORT
      - FIREFLY_APP_URL
      - FIREFLY_PROJECT_URL
      - GITHUB_CLIENT_ID
      - GITHUB_CLIENT_SECRET
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.port=2440"
        - "traefik.docker.network=firefly_net"
        - "traefik.frontend.rule=Host:auth.${FIREFLY_HOSTNAME}"
  project-daemon:
    image: registry.montage.studio/firefly/project-daemon:0.2.0
    build:
      context: .
      dockerfile: project-daemon/Dockerfile
    networks:
      - net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV
      - WORKING_DIR
      - USE_SRC_DOCKER_VOLUMES
      - SWARM_SINGLE_NODE
      - FIREFLY_PROJECT_IMAGE=registry.montage.studio/firefly/project:0.2.0
      - FIREFLY_PORT
      - FIREFLY_APP_URL
      - FIREFLY_PROJECT_URL
    deploy:
      placement:
        constraints: [node.role == manager]
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.port=2440"
        - "traefik.docker.network=firefly_net"
        - "traefik.frontend.rule=Host:project.${FIREFLY_HOSTNAME},api.${FIREFLY_HOSTNAME},build.${FIREFLY_HOSTNAME},ws.${FIREFLY_HOSTNAME}"
  # This is just here so that docker-compose knows to build, push, and pull the project image
  # Project services are created dynamically by the project-daemon
  project:
    image: registry.montage.studio/firefly/project:0.2.0
    build:
      context: .
      dockerfile: project/Dockerfile
    deploy:
      replicas: 0

networks:
  net:
    driver: overlay
    attachable: true

configs:
  traefik-config:
    file: traefik.toml
