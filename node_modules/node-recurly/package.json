{
  "name": "node-recurly",
  "description": "Library for accessing the api for the Recurly recurring billing service.",
  "keywords": [
    "recurly",
    "e-commerce",
    "recurring billing"
  ],
  "version": "2.1.0",
  "homepage": "https://github.com/robrighter/node-recurly",
  "author": {
    "name": "Rob Righter",
    "email": "robrighter@gmail.com",
    "url": "http://github.com/robrighter"
  },
  "contributors": [
    {
      "name": "IvÃ¡n Guardado",
      "email": "dev.ivangc@gmail.com",
      "url": "http://github.com/IvanGuardado"
    },
    {
      "name": "Rob Righter",
      "email": "robrighter@gmail.com",
      "url": "http://github.com/robrighter"
    },
    {
      "name": "Dmitriy Shekhovtsov",
      "email": "valorkin@gmail.com",
      "url": "https://github.com/valorkin"
    }
  ],
  "bugs": {
    "url": "https://github.com/robrighter/node-recurly/issues"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/recurly.js",
  "dependencies": {
    "xml2js": ">= 0.4.0",
    "js2xml": "git://github.com/valorkin/js2xml"
  },
  "engines": {
    "node": ">= 0.4"
  },
  "readme": "Node-Recurly\n===============\n\nnode-recurly is a node.js library for using the recurly recurring billing service. This library is intended to follow very closely the recurly documentation found at:\nhttp://docs.recurly.com/\n\nInstallation\n===============\n\n\tnpm install node-recurly\n\nadd a config file to your project that has contents similar to:\n\n\t\tmodule.exports = {\n\t\t\tAPI_KEY: 'secret',\n\t\t\tSUBDOMAIN:    '[your_account]',\n\t\t\tENVIRONMENT:  'sandbox',\n\t\t\tDEBUG: false\n\t\t};\n\n\nUsage\n===============\n\n\t\tvar Recurly = require('node-recurly');\n\t\tvar recurly = new Recurly(require('./config'));\n\nAfter that, just call the methods below:\n\n\nAccounts\n===============\nhttp://docs.recurly.com/api/accounts\n\n\n\n\trecurly.accounts.list(callback, filter)\n\n\trecurly.accounts.create(details, callback)\n\n\trecurly.accounts.update(accountcode, details, callback) \n\n\trecurly.accounts.get(accountcode, callback) \n\n\trecurly.accounts.close(accountcode, callback) \n\n\trecurly.accounts.reopen(accountcode, callback)\n\n\nBilling Information\n===============\nhttp://docs.recurly.com/api/billing-info\n\n\trecurly.billingInfo.update(accountcode, details, callback) \n\n\n\trecurly.billingInfo.get(accountcode, callback) \n\n\n\trecurly.billingInfo.remove(accountcode, callback) \n\n\n\nAdjustments\n===============\nhttp://docs.recurly.com/api/adjustments\n\n\trecurly.adjustments.get(accountcode, callback)\n  \n\trecurly.adjustments.create(accountcode, details, callback)\n\n\trecurly.adjustments.remove(uuid, callback)\n\n\nCoupons\n===============\nhttp://docs.recurly.com/api/coupons\n\n\trecurly.coupons.list(callback, filter)\n\t\n\trecurly.coupons.get(couponcode, callback)\n\n\trecurly.coupons.create(details, callback)\n\n\trecurly.coupons.deactivate(couponcode, callback)\n\nCoupon Redemtion\n=================\nhttp://docs.recurly.com/api/coupons/coupon-redemption\n  \n\trecurly.couponRedemption.redeem(couponcode, details, callback)\n\n\trecurly.couponRedemption.get(accountcode, callback)\n\n\trecurly.couponRedemption.remove(accountcode, callback)\n\n\trecurly.couponRedemption.getByInvoice(invoicenumber, callback)\n\n\n\nInvoices\n===============\nhttp://docs.recurly.com/api/invoices\n\n\trecurly.invoices.list(callback, filter)\n\t\n\trecurly.invoices.listByAccount(accountcode, callback, filter)\n\n\trecurly.invoices.get(invoicenumber, callback)\n  \n\trecurly.invoices.create(accountcode, details, callback)\n\n\trecurly.invoices.markSuccessful(invoicenumber, callback)\n\n\trecurly.invoices.markFailed(invoicenumber, callback)\n\n\nSubscriptions\n===============\nhttp://docs.recurly.com/api/subscriptions\n\n\trecurly.subscriptions.list(callback, filter) \n\t\n\trecurly.subscriptions.listByAccount(accountcode, callback) \n\n\trecurly.subscriptions.get(uuid, callback) \n\n\trecurly.subscriptions.create(details, callback) \n  \n\trecurly.subscriptions.update(uuid, details, callback) \n  \n\trecurly.subscriptions.cancel(uuid, callback) \n  \n\trecurly.subscriptions.reactivate(uuid, callback) \n  \n\trecurly.subscriptions.terminate(uuid, refundType, callback) \n\n \trecurly.subscriptions.postpone(uuid, nextRenewalDate, callback) \n\n\nSubscription Plans\n==================\nhttp://docs.recurly.com/api/plans\n\n\trecurly.plans.list(callback, filter) \n\n\trecurly.plans.get(plancode, callback) \n\t\n\trecurly.plans.create(details, callback)\n  \n\trecurly.plans.update(plancode, details, callback)\n  \n\trecurly.plans.remove(plancode, callback)\n\nPlan Add-ons\n==================\nhttp://docs.recurly.com/api/plans/add-ons\n\n\trecurly.planAddons.list(plancode, callback, filter) \n\n\trecurly.planAddons.get(plancode, addoncode, callback) \n  \n\trecurly.planAddons.create(plancode, details, callback)\n  \n\trecurly.planAddons.update(plancode, addoncode, details, callback)\n  \n\trecurly.planAddons.remove(plancode, addoncode, callback)\n\n\nTransactions\n===============\nhttp://docs.recurly.com/api/transactions\n\n\trecurly.transactions.list(callback, filter) \n\n\n\trecurly.transactions.listByAccount(accountcode, callback, filter) \n\n\n\trecurly.transactions.get(id, callback) \n\n\n\trecurly.transactions.create(details, callback) \n\n\n\trecurly.transactions.refund(id, callback, amount) \n",
  "readmeFilename": "README.md",
  "_id": "node-recurly@2.1.0",
  "dist": {
    "shasum": "ee137cd884dee0f7490ee508b6de479f36ecc062"
  },
  "_from": "node-recurly@^2.1.0",
  "_resolved": "https://registry.npmjs.org/node-recurly/-/node-recurly-2.1.0.tgz"
}
