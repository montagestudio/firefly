{
  "author": {
    "name": "Phil Jackson",
    "email": "phil@apiaxle.com",
    "url": "http://apiaxle.com"
  },
  "name": "js2xml",
  "description": "Convert arbitary javascript to simple XML. Developed for ApiAxle.",
  "version": "0.0.7",
  "main": "./lib/js2xml",
  "repository": {
    "url": ""
  },
  "keywords": [
    "xml",
    "json",
    "json2xml",
    "js2xml",
    "data2xml",
    "data",
    "libxml"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/jashkenas/coffee-script/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": ">0.4"
  },
  "dependencies": {
    "libxmljs": "0.8.1"
  },
  "devDependencies": {
    "coffee-script": "~1"
  },
  "readme": "# About\n\nA very simple library that converts a simple data structure into\nXML. Doesn't support namespaces or attributes, just very simple\noutput. This allows you to write JSON and XML from the same structure\nwithout a middle-man.\n\nIt's written in Coffeescript but the JS is included.\n\n# Installing\n\n    $ npm install js2xml\n\n# Usage\n\n    var Js2Xml = require(\"js2xml\").Js2Xml;\n\n    var person = {\n      name: \"Phil Jackson\",\n      mood: \"Bored\",\n      stuff: [ \"love, \"puppies\", 2, 2.3, { one: { two: \"three\" } } ],\n      morestuff: { milkshake: \"banana\" }\n    };\n\n    var js2xml = new Js2Xml(\"person\", person);\n    js2xml.toString();\n\nGives:\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <person>\n      <name>Phil Jackson</name>\n      <mood>Bored</mood>\n      <stuff>\n        <item>love</item>\n        <item>puppies</item>\n        <item>2</item>\n        <item>2.3</item>\n        <item>\n          <one>\n            <two>three</two>\n          </one>\n        </item>\n      </stuff>\n      <morestuff>\n        <milkshake>banana</milkshake>\n      </morestuff>\n    </person>\n\n# Pluralisation of lists\n\nHere's how you might override the pluralisation function to deal with\nanonymous list items in Javascript:\n\n    class AppleXml extends Js2Xml\n      @map =\n        \"apples\": \"apple\"\n\n      pluralisation: ( name ) ->\n        return @constructor.map[ name ] or \"item\"\n",
  "readmeFilename": "README.md",
  "_id": "js2xml@0.0.7",
  "dist": {
    "shasum": "ef967be3d4dde5314cea9cd6309b2131e8458c76"
  },
  "_resolved": "git://github.com/valorkin/js2xml#0831602c180728afff11060dca783ac36f7658e5",
  "_from": "js2xml@git://github.com/valorkin/js2xml"
}
